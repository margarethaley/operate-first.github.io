{"componentChunkName":"component---src-templates-markdown-js","path":"/data-science/data-skipping/site/docs/api/developer/metadata-versioning.md","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"markdownRemark":{"id":"47409185-2237-5f69-9589-39df76e41e9d","html":"<!--\n -- Copyright 2021 IBM Corp.\n -- SPDX-License-Identifier: Apache-2.0\n -->\n<h1 id=\"metadata-versioning\" style=\"position:relative;\"><a href=\"#metadata-versioning\" aria-label=\"metadata versioning permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Metadata Versioning</h1>\n<p>The versioning mechanism, version numbers and inter-version support matrix is up to the metadata store implementation.<br>\nHowever, some details were pulled above the metadata store abstraction.  </p>\n<p>A metadata store must be able to report the <strong><em>metadata version status</em></strong>, which is defined as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">object</span> MetadataVersionStatus <span class=\"token keyword\">extends</span> Enumeration <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span> MetadataVersionStatus <span class=\"token operator\">=</span> Value\n\n  <span class=\"token comment\">/**\n    * The stored metadata is from exactly the same version\n    * as the metadata version of this jar.\n    */</span>\n  <span class=\"token keyword\">val</span> CURRENT <span class=\"token operator\">=</span> Value<span class=\"token punctuation\">(</span><span class=\"token string\">\"current\"</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token comment\">/**\n    * The stored metadata is from a version strictly smaller than\n    * the metadata version of this jar. however, it can be used for filtering\n    * and a REFRESH operation will result in the metadata having the `CURRENT` status\n    */</span>\n  <span class=\"token keyword\">val</span> DEPRECATED_SUPPORTED <span class=\"token operator\">=</span> Value<span class=\"token punctuation\">(</span><span class=\"token string\">\"deprecated_supported\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">/**\n    * The stored metadata is from a version strictly smaller than\n    * the metadata version of this jar, a version so old it can't be used for filtering.\n    * a REFRESH operation may or may not be able to upgrade it, up to the\n    * metadata store's `isMetadataUpgradePossible` method.\n    */</span>\n  <span class=\"token keyword\">val</span> DEPRECATED_UNSUPPORTED <span class=\"token operator\">=</span> Value<span class=\"token punctuation\">(</span><span class=\"token string\">\"deprecated_unsupported\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">/**\n    * The stored metadata is from a version which is strictly greater\n    * than the metadata version of this jar.\n    * the metadata store is not expected to able to either read or refresh this metadata.\n    */</span>\n  <span class=\"token keyword\">val</span> TOO_NEW <span class=\"token operator\">=</span> Value<span class=\"token punctuation\">(</span><span class=\"token string\">\"too_new\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>and so the metadata store must be able to perform the following operation regarding versioning:</p>\n<ol class=\"pf-c-list\">\n<li>\n<p>Report the Metadata Version Status:</p>\n<div class=\"gatsby-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">def</span> getMdVersionStatus<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> MetadataVersionStatus</code></pre></div>\n</li>\n<li>\n<p>Report whether or not a metadata upgrade is possible:</p>\n<div class=\"gatsby-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">def</span> isMetadataUpgradePossible<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Boolean</span></code></pre></div>\n</li>\n<li>\n<p>Perform a Metadata Upgrade if reported as possible:</p>\n<div class=\"gatsby-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">def</span> upgradeMetadata<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Unit</span></code></pre></div>\n</li>\n</ol>\n<p>During a REFRESH operation, the metadata version status is first checked, and upgraded if necessary, before performing the actual refresh or removing metadata for deleted objects.<br>\nAny failure during this process (e.g., metadata version status <code class=\"language-text\">TOO_NEW</code>, <code class=\"language-text\">isMetadataUpgradePossible</code> returning false etc.) will fail the refresh.</p>","fields":{"srcLink":"https://github.com/xskipper-io/xskipper/blob/master/site/docs/api/developer/metadata-versioning.md"},"frontmatter":{"title":"","description":null,"extraClasses":null}}},"pageContext":{"id":"47409185-2237-5f69-9589-39df76e41e9d"}},"staticQueryHashes":["117426894","3000541721","3606484676","533861647"]}