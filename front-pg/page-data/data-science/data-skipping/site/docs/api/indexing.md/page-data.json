{"componentChunkName":"component---src-templates-markdown-js","path":"/data-science/data-skipping/site/docs/api/indexing.md","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"markdownRemark":{"id":"7d0a0723-61ae-5a64-b944-8056f20fd33e","html":"<!--\n -- Copyright 2021 IBM Corp.\n -- SPDX-License-Identifier: Apache-2.0\n -->\n<h1 id=\"indexing\" style=\"position:relative;\"><a href=\"#indexing\" aria-label=\"indexing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Indexing</h1>\n<p>For every column in the object, Xskipper can collect summary metadata. This metadata is used during query evaluation to skip over objects which have no relevant data.</p>\n<h2 id=\"default-indexes\" style=\"position:relative;\"><a href=\"#default-indexes\" aria-label=\"default indexes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Default Indexes</h2>\n<p>The following indexes are supported out of the box:</p>\n<table class=\"pf-c-table\">\n<thead>\n<tr>\n<th>Index type</th>\n<th>Description</th>\n<th>Applicable to predicates in WHERE clauses</th>\n<th>Column types</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>MinMax</td>\n<td>Stores minimum and maximum values for a column</td>\n<td>&#x3C;,&#x3C;=,=,>=,></td>\n<td>All types except for complex types. See <a href=\"https://spark.apache.org/docs/latest/sql-ref-datatypes.html\">Supported Spark SQL data types</a>.</td>\n</tr>\n<tr>\n<td>ValueList</td>\n<td>Stores the list of unique values for the column</td>\n<td>=,IN,LIKE</td>\n<td>All types except for complex types. See <a href=\"https://spark.apache.org/docs/latest/sql-ref-datatypes.html\">Supported Spark SQL data types</a>.</td>\n</tr>\n<tr>\n<td>BloomFilter</td>\n<td>Uses a bloom filter to test for set membership</td>\n<td>=,IN</td>\n<td>Byte, String, Long, Integer, Short</td>\n</tr>\n</tbody>\n</table>\n<p>In order to add an index using the <code class=\"language-text\">IndexBuilder</code> to specify the required indexes, for example:</p>\n<p>=== “Python”</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">``` python\n# create Xskipper instance for the sample dataset\nxskipper = Xskipper(spark, dataset_location)\n\n# remove index if exists\nif xskipper.isIndexed():\n    xskipper.dropIndex()\n\nxskipper.indexBuilder() \\\n        .addMinMaxIndex(&quot;temp&quot;) \\\n        .addValueListIndex(&quot;city&quot;) \\\n        .addBloomFilterIndex(&quot;vid&quot;) \\\n        .build(reader) \\\n        .show(10, False)\n```</code></pre></div>\n<p>=== “Scala”</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">``` scala\n// create Xskipper instance for the sample dataset\nval xskipper = new Xskipper(spark, dataset_location)\n\n// remove existing index if needed\nif (xskipper.isIndexed()) {\n  xskipper.dropIndex()\n}\n\nxskipper.indexBuilder()\n        .addMinMaxIndex(&quot;temp&quot;)\n        .addValueListIndex(&quot;city&quot;)\n        .addBloomFilterIndex(&quot;vid&quot;)\n        .build(reader)\n        .show(false)\n```</code></pre></div>\n<p>By default, the indexes are stored as parquet files stored in storage  Each parquet file with row per each object in the dataset.  </p>\n<p>For more information about the parquet metadatastore see <a href=\"../api/developer/parquet-metadatastore-spec.md\">here</a>.</p>\n<h2 id=\"plugins\" style=\"position:relative;\"><a href=\"#plugins\" aria-label=\"plugins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Plugins</h2>\n<p>Xskipper supports adding new indexes using a <a href=\"../concepts/extensible.md\">pluggable system</a>.<br>\nFor instructions on how to create a new plugin see <a href=\"creating-new-plugin.md\">here</a>.</p>\n<h3 id=\"supported-plugins\" style=\"position:relative;\"><a href=\"#supported-plugins\" aria-label=\"supported plugins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Supported plugins</h3>\n<p>Currently the following plugins are supported (in addition to the built-in indexes: MinMax, ValueList and BloomFilter):</p>\n<ul class=\"pf-c-list\">\n<li><a href=\"https://github.com/xskipper-io/xskipper-regex-plugin\">Regex Plugin</a> - An index which enables to save a value list for a given regex.</li>\n</ul>\n<h3 id=\"setting-up-a-plugin\" style=\"position:relative;\"><a href=\"#setting-up-a-plugin\" aria-label=\"setting up a plugin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting up a plugin</h3>\n<p>In order to use a plugin you first need to register the needed classes.<br>\nFor example, for the <a href=\"https://github.com/xskipper-io/xskipper-regex-plugin\">Regex Plugin</a>:</p>\n<p>=== “Python”</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">``` python\nfrom xskipper import Registration\n\nRegistration.addMetadataFilterFactory(spark, &#39;io.xskipper.plugins.regex.filter.RegexValueListMetaDataFilterFactory&#39;)\n# Add IndexFactory\nRegistration.addIndexFactory(spark, &#39;io.xskipper.plugins.regex.index.RegexIndexFactory&#39;)\n# Add MetaDataTranslator\nRegistration.addMetaDataTranslator(spark, &#39;io.xskipper.plugins.regex.parquet.RegexValueListMetaDataTranslator&#39;)\n# Add ClauseTranslator\nRegistration.addClauseTranslator(spark, &#39;io.xskipper.plugins.regex.parquet.RegexValueListClauseTranslator&#39;)\n```</code></pre></div>\n<p>=== “Scala”</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">``` scala\nimport io.xskipper._\nimport io.xskipper.plugins.regex.filter.RegexValueListMetaDataFilterFactory\nimport io.xskipper.plugins.regex.index.RegexIndexFactory\nimport io.xskipper.plugins.regex.parquet.{RegexValueListClauseTranslator, RegexValueListMetaDataTranslator}\n\n// registering the filter factories for user metadataFilters\nRegistration.addIndexFactory(RegexIndexFactory)\nRegistration.addMetadataFilterFactory(RegexValueListMetaDataFilterFactory)\nRegistration.addClauseTranslator(RegexValueListClauseTranslator)\nRegistration.addMetaDataTranslator(RegexValueListMetaDataTranslator)\n```</code></pre></div>\n<h3 id=\"index-building\" style=\"position:relative;\"><a href=\"#index-building\" aria-label=\"index building permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Index building</h3>\n<p>In order to build an index you can use the <code class=\"language-text\">addCustomIndex</code> API.   </p>\n<p>For example for the <a href=\"https://github.com/xskipper-io/xskipper-regex-plugin\">Regex Plugin</a>:</p>\n<p>=== “Python”</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">``` python\n    xskipper = Xskipper(spark, dataset_path)\n    \n    # adding the index using the custom index API\n    xskipper.indexBuilder() \\\n        .addCustomIndex(&quot;io.xskipper.plugins.regex.index.RegexValueListIndex&quot;, [&quot;log_line&quot;],\n                        {&quot;io.xskipper.plugins.regex.pattern.r0&quot;: &quot;.* .* .* (.*): .*&quot;}) \\\n        .build(reader) \\\n        .show(10, False)\n```</code></pre></div>\n<p>=== “Scala”</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">``` scala\nimport io.xskipper.plugins.regex.implicits._\n\n// index the dataset\nval xskipper = new Xskipper(spark, dataset_path)\n\n\nxskipper\n  .indexBuilder()\n  // using the implicit method defined in the plugin implicits\n  .addRegexValueListIndex(&quot;log_line&quot;, Seq(&quot;.* .* .* (.*): .*&quot;))\n  // equivalent\n  //.addCustomIndex(RegexValueListIndex(&quot;log_line&quot;, Seq(&quot;.* .* .* (.*): .*&quot;)))\n  .build(reader).show(false)\n\n```</code></pre></div>\n<h3 id=\"creating-you-own-plugin\" style=\"position:relative;\"><a href=\"#creating-you-own-plugin\" aria-label=\"creating you own plugin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating you own plugin</h3>\n<p>In order to create your own plugin see <a href=\"creating-new-plugin.md\">here</a>.</p>","fields":{"srcLink":"https://github.com/xskipper-io/xskipper/blob/master/site/docs/api/indexing.md"},"frontmatter":{"title":"","description":null,"extraClasses":null}}},"pageContext":{"id":"7d0a0723-61ae-5a64-b944-8056f20fd33e"}},"staticQueryHashes":["117426894","3000541721","3606484676","533861647"]}